group = 'Downtown',
opacity = 0.6,
options = pathOptions(pane = "Downtown"))%>%
addPolylines(data = council,
weight = 6,
color = 'green',
group = 'Council',
opacity = 0.6,
options = pathOptions(pane = "Council"))%>%
addPolygons(data = dt_census,
weight = 2,
fillOpacity = 0.1)
dt_census <- st_join(la_census,dtla,left = FALSE, largest = FALSE)
dtla <- dtla%>%st_set_crs(st_crs(council))
dt_census <- st_join(la_census,dtla,left = FALSE, largest = FALSE)
library(sf)
library(tidyverse)
library(rgdal)
load('la_census.Rdata')
council <- st_read("Council Districts/geo_export_60b76ffd-e8a1-4e69-99a8-32e57169a1c5.shp")
dtla <- st_read("DTLA.kml")
council <- council%>%filter(district%in%c(1,14,9))
la_census <- la_census%>%st_set_crs(st_crs(council))
la_census <- st_join(la_census, council,left = FALSE, largest = TRUE)
dtla <- dtla%>%st_set_crs(st_crs(council))
dt_census <- st_join(la_census,dtla,left = FALSE, largest = FALSE)
dt_census <- st_join(la_census,dtla,left = FALSE, smallest = TRUE)
library(sf)
library(tidyverse)
library(rgdal)
load('la_census.Rdata')
council <- st_read("Council Districts/geo_export_60b76ffd-e8a1-4e69-99a8-32e57169a1c5.shp")
dtla <- st_read("DTLA.kml")
council <- council%>%filter(district%in%c(1,14,9))
la_census <- la_census%>%st_set_crs(st_crs(council))
la_census <- st_join(la_census, council,left = FALSE, largest = TRUE)
dtla <- dtla%>%st_set_crs(st_crs(council))
dt_census <- st_join(la_census,dtla,left = FALSE, smallest = TRUE)
?st_join
dt_census <- st_join(la_census,dtla,left = FALSE, largest = TRUE)
library(sf)
library(tidyverse)
library(rgdal)
load('la_census.Rdata')
council <- st_read("Council Districts/geo_export_60b76ffd-e8a1-4e69-99a8-32e57169a1c5.shp")
dtla <- st_read("DTLA.kml")
council <- council%>%filter(district%in%c(14))
la_census <- la_census%>%st_set_crs(st_crs(council))
la_census <- st_join(la_census, council,left = FALSE, largest = TRUE)
dtla <- dtla%>%st_set_crs(st_crs(council))
dt_census <- st_join(la_census,dtla,left = FALSE, largest = TRUE)
m %>%
addPolylines(data = dtla,
weight=5,
color = 'purple',
group = 'Downtown',
opacity = 0.6,
options = pathOptions(pane = "Downtown"))%>%
addPolylines(data = council,
weight = 6,
color = 'green',
group = 'Council',
opacity = 0.6,
options = pathOptions(pane = "Council"))%>%
addPolygons(data = la_census,
weight = 2,
fillOpacity = 0.1)
library(sf)
library(tidyverse)
library(rgdal)
load('la_census.Rdata')
council <- st_read("Council Districts/geo_export_60b76ffd-e8a1-4e69-99a8-32e57169a1c5.shp")
dtla <- st_read("DTLA.kml")
council <- council%>%filter(district%in%c(1,14,9))
la_census <- la_census%>%st_set_crs(st_crs(council))
la_census <- st_join(la_census, council,left = FALSE, largest = TRUE)
dtla <- dtla%>%st_set_crs(st_crs(council))
dt_census <- st_join(la_census,dtla,left = FALSE, largest = TRUE)
m %>%
addPolylines(data = dtla,
weight=5,
color = 'purple',
group = 'Downtown',
opacity = 0.6,
options = pathOptions(pane = "Downtown"))%>%
addPolylines(data = council,
weight = 6,
color = 'green',
group = 'Council',
opacity = 0.6,
options = pathOptions(pane = "Council"))%>%
addPolygons(data = la_census,
weight = 2,
fillOpacity = 0.1)
runApp('app_n.R')
runApp('app_n.R')
View(la_census)
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
table(is.na(la_census$NAME))
runApp('app_n.R')
runApp('app_n.R')
exp_census <- la_census%>%filter(!NAME%in%dtla$NAME)
View(la_census)
View(dt_census)
exp_census <- la_census%>%filter(!NAME%in%dtla_census$NAME)
exp_census <- la_census%>%filter(!NAME%in%dt_census$NAME)
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
library(stringr)
test <- str_split_fixed(exp_census$NAME, ",", 2)
View(test)
exp_census$census <- str_split_fixed(exp_census$NAME, ",", 2)$V1
exp_census$census <- str_split_fixed(exp_census$NAME, ",", 2)[1]
View(exp_census)
ui <- bootstrapPage(
#tags$head(includeHTML("gtag.html")),
navbarPage(theme = shinytheme("flatly"), collapsible = FALSE,
"Central City Association of Los Angeles", id="nav",
tabPanel("Redistricting",
div(class="outer",
tags$head(includeCSS("style.css")),
leafletOutput("main_map", width="100%", height="100%"),
absolutePanel(id = "controls", class = "panel panel-default",
top = 100, left = 55, width = 350, fixed=TRUE,
draggable = TRUE, height = "auto",
#img(src="logo.png",height=37,width=110,align = "left"),
pickerInput("select_state", label = h4("Layer Selection"), inline = F,
selected = "Total Population",
choices = sort(c(unique(as.character(census$var_name)))),
choicesOpt = list(
style = rep(("color:black; font-size: 110%;"), 56)),
options = list(liveSearch = TRUE)),
selectizeInput("select_tract",label = "Tract Selection", multiple = T,
choices = sort(as.character(exp_census$census), decreasing = F),
options = list(placeholder = "Select Tracts", 'plugins' = list('remove_button'))
)
),
absolutePanel(id = "controls", class = "panel panel-default",
top = 100, right = 55, width = 400, fixed=TRUE,
draggable = TRUE, height = "auto")
),
absolutePanel(id = "logo", class = "card", bottom = 20, left = 60, width = 120, fixed=TRUE, draggable = FALSE, height = "auto",
tags$a(href='https://www.ccala.org/', tags$img(src='logo.png',height='110',width='110')))
)
)
)
runApp('app_n.R')
exp_census$census <- str_split_fixed(exp_census$NAME, ",", 2)[,1]
runApp('app_n.R')
runApp('app_n.R')
View(exp_census)
View(exp_census)
View(la_census)
View(census)
exp_census$census
View(census)
census$my_cen_var_names(census$var_name=="Foreign Born")
census$my_cen_var_names[census$var_name=="Foreign Born"]
names(dt_census)
data_set <- dt_census %>% select("GEOID","NAME")
View(data_set)
library(sf)
library(tidyverse)
library(rgdal)
library(stringr)
load('la_census.Rdata')
council <- st_read("Council Districts/geo_export_60b76ffd-e8a1-4e69-99a8-32e57169a1c5.shp")
dtla <- st_read("DTLA.kml")
council <- council%>%filter(district%in%c(1,14,9))
la_census$census <- str_split_fixed(la_census$NAME, ",", 2)[,1]
la_census <- la_census%>%st_set_crs(st_crs(council))
la_census <- st_join(la_census, council,left = FALSE, largest = TRUE)
dtla <- dtla%>%st_set_crs(st_crs(council))
dt_census <- st_join(la_census,dtla,left = FALSE, largest = TRUE)
exp_census <- la_census%>%filter(!NAME%in%dt_census$NAME)
View(dt_census)
View(exp_census)
as.character(census$my_cen_var_names[census$var_name=='Total Population']
)
la_census[,Total Population]
la_census[,"total_population"]
View(la_census)
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
class(la_census[,'total_population'])
as.dataframe(la_census[,'total_population'])
as.data.frame(la_census[,'total_population'])
as.data.frame(la_census[,'total_population'])[,1]
la_census[,'total_population'][,1]
runApp('app_n.R')
runApp('app_n.R')
df <- as.data.frame(la_census[,'total_population'])[,1]
df <- data.frame(as.data.frame(la_census[,'total_population'])[,1])
View(df)
df <- data.frame(as.data.frame(la_census[,var])[,1])
colnames(df) <- 'variable'
df <- data.frame(as.data.frame(la_census[,'total_population'])[,1])
colnames(df) <- 'variable'
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
View(df)
class(df$variable)
runApp('app_n.R')
library(tidycensus)
census <- read.csv("census_codebook.csv")
#years <- list(2018)
census$my_cen_vars <- as.character(census$my_cen_vars)
la_census <- get_acs(
geography = "tract",
variables = census$my_cen_vars,
state = "CA",
county = '037',
survey="acs5",
year = 2018,
geometry = TRUE
)
la_census <- la_census%>%select("GEOID","NAME","variable","estimate","geometry")%>%
spread( variable, estimate)
colnames(la_census) <- c("GEOID","NAME","white_only" ,"aa_pop" ,"asian_pop",
"api_pop" ,"hispanic_pop", "total_population" , "foreign_born" , "poverty_number" ,
"medi_income",  "renter_number" , "limited_english_totpop" ,"geometry" )
save.image('la_census.Rdata')
# multi_year <-
#   map(
#     years,
#     ~ get_acs(
#       geography = "tract",
#       variables = census$my_cen_vars,
#       state = "CA",
#       county = '037',
#       survey="acs5",
#       year = 2018,
#       geometry = TRUE
#     )
#   )
# la_census <- multi_year[1]
runApp('app_n.R')
View(census)
runApp('app_n.R')
var <- as.character(census$my_cen_var_names[census$var_name=='input$select_layer'Total Population'']
var <- as.character(census$my_cen_var_names[census$var_name=='input$select_layer'Total Population']
var <- as.character(census$my_cen_var_names[census$var_name=='Total Population']
)
var
df <- data.frame(as.data.frame(la_census[,var])[,1])
colnames(df) <- 'variable'
colorQuantile("Purples", df$variable, n=6)
class(quantcolors)
class(quantcolors())
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp()
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
paste('Total Population: ',right_lay$total_population,"\n",
'# Limited English: ',right_lay$limited_english_totpop,"\n", sep='')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
table(is.na(la_census))
View(la_census)
runApp('app_n.R')
summary(la_census$medi_income)
summary(la_census$api_pop)
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
colorBin()
?colorBin
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
var <- as.character(census$my_cen_var_names[census$var_name=='# API'])
df <- data.frame(as.data.frame(dt_census[,var])[,1])
colnames(df) <- 'variable'
View(df)
colorQuantile("Purples", df$variable, n=4)
table(is.na(df$variable))
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
var <- as.character(census$my_cen_var_names[census$var_name=='# API'])
df <- la_census%>%select(var)
View(df)
df$variable
colnames(df) <- c('variable','geometry')
df$variable
runApp('app_n.R')
runApp('app_n.R')
ort(c(unique(as.character(census$var_name)
sort(c(unique(as.character(census$var_name)
)
)
)
sort(c(unique(as.character(census$my_cen_var_names))))
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
?mean()
sum(dt_census$total_population)
sum(dt_census$total_population,1)
mean(dt_census$total_population)
mean(dt_census$total_population,100000)
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
runApp('app_n.R')
mean(la_census$renter_number)
mean(la_census$renter_number,0)
mean(la_census$renter_number,1000000)
mean(la_census$renter_number,1000000,100000)
mean(la_census$renter_number,1000000,0)
mean(la_census$renter_number,c(1000000,10000)
)
runApp('app_n.R')
runApp('app_n.R')
summary(dt_census$medi_income)
runApp('app_n.R')
runApp('app_n.R')
neigh <- st_read('Neighborhood Councils (Certified)/geo_export_fbd7da77-7f30-4f5f-87f1-e7c8d86998ee.shp')
library(sf)
library(tidyverse)
library(rgdal)
library(stringr)
load('la_census.Rdata')
council <- st_read("Council Districts/geo_export_60b76ffd-e8a1-4e69-99a8-32e57169a1c5.shp")
dtla <- st_read("DTLA.kml")
neigh <- st_read('Neighborhood Councils (Certified)/geo_export_fbd7da77-7f30-4f5f-87f1-e7c8d86998ee.shp')
#council <- council%>%filter(district%in%c(1,14,9))
la_census$census <- str_split_fixed(la_census$NAME, ",", 2)[,1]
plot(la_census)
plot(neigh)
View(neigh)
#council <- council%>%filter(district%in%c(1,14,9))
la_census$census <- str_split_fixed(la_census$NAME, ",", 2)[,1]
la_census <- la_census%>%st_set_crs(st_crs(council))
la_census <- st_join(la_census, council,left = FALSE, largest = TRUE)
plot(la_census)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
load('la_census.Rdata')
council <- st_read("Council Districts/geo_export_60b76ffd-e8a1-4e69-99a8-32e57169a1c5.shp")
dtla <- st_read("DTLA.kml")
neigh <- st_read('Neighborhood Councils/geo_export_398e0866-faf4-4573-a4a5-5709996b9bb6.shp')
#council <- council%>%filter(district%in%c(1,14,9))
la_census$census <- str_split_fixed(la_census$NAME, ",", 2)[,1]
la_census$census <- str_replace(la_census$census,'Census Tract','CT')
la_census <- la_census%>%st_set_crs(st_crs(council))
la_census <- st_join(la_census, council,left = FALSE, largest = TRUE)
runApp()
runApp()
head(neigh)
head(council)
runApp()
runApp()
runApp()
runApp()
names(council)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(la_census)
runApp()
View(census)
census <- read.csv('census_codebook.csv')
runApp()
runApp()
names(la_census)
View(la_census)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?updateSelectInput()
runApp()
runApp()
runApp()
?selectizeInput()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?append()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
neigh$name[1]
as.character(neigh$name[1])
la_census$census[1]
la_census[1,'census']
c(la_census[1,'census'])
c(la_census$census[1])
class(c(la_census$census[1]))
class(la_census$census[1])
runApp()
c('1')+c('2')
c(c('1'),c('2'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addLayersControl()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
